[{"path":"https://elipousson.github.io/feltr/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 Eli Pousson Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://elipousson.github.io/feltr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Eli Pousson. Author, maintainer, copyright holder.","code":""},{"path":"https://elipousson.github.io/feltr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Pousson E (2023). feltr: Read Spatial Data Felt. R package version 0.1.2.9000,  https://elipousson.github.io/feltr/, https://github.com/elipousson/feltr/.","code":"@Manual{,   title = {feltr: Read Spatial Data from Felt},   author = {Eli Pousson},   year = {2023},   note = {R package version 0.1.2.9000,  https://elipousson.github.io/feltr/},   url = {https://github.com/elipousson/feltr/}, }"},{"path":"https://elipousson.github.io/feltr/index.html","id":"feltr-","dir":"","previous_headings":"","what":"Read Spatial Data from Felt","title":"Read Spatial Data from Felt","text":"goal feltr read maps Felt simple feature SpatRaster objects.","code":""},{"path":"https://elipousson.github.io/feltr/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Read Spatial Data from Felt","text":"can install development version feltr like :","code":"pak::pkg_install(\"elipousson/feltr\")"},{"path":"https://elipousson.github.io/feltr/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Read Spatial Data from Felt","text":"can use read_felt_map() create sf object features map URL.  get_felt_map() returns list basic information map (set read = TRUE read map elements layers time): can also use read_felt_raster() (wrapper rasterpic::rasterpic_img()) create SpatRaster object “Image” type feature Felt. information Felt Public API check guide Getting Started Felt API Felt Public API reference. Note, July 2024, Felt announced pricing subscription plans expected limit API access paid accounts starting January 2024. Educators can also apply free accounts retain API access January 2024.","code":"library(feltr) url <- \"https://felt.com/map/Site-Plan-Example-PGTipS2mT8CYBIVlyAm9BkD\"  site_plan <- read_felt_map(url)  plot(site_plan) #> Warning: plotting the first 9 out of 22 attributes; use max.plot = 22 to plot #> all get_felt_map(url) #> $attributes #> $attributes$title #> [1] \"Site Plan Example\" #>  #> $attributes$url #> [1] \"https://felt.com/map/Site-Plan-Example-PGTipS2mT8CYBIVlyAm9BkD\" #>  #> $attributes$thumbnail_url #> [1] \"https://d3a9fdbxbk3c9v.cloudfront.net/0fc919da-9654-4544-8acb-b9e74253fb3e.jpg\" #>  #>  #> $id #> [1] \"PGTipS2mT8CYBIVlyAm9BkD\" #>  #> $links #> $links$self #> [1] \"https://felt.com/api/v1/maps/PGTipS2mT8CYBIVlyAm9BkD\" #>  #>  #> $type #> [1] \"map\" image_map <- read_felt_raster(   \"https://felt.com/map/feltr-sample-map-read-felt-raster-oiinodTbT79BEueYdGp1aND\",   \"https://tile.loc.gov/image-services/iiif/service:gmd:gmd370:g3700:g3700:ct003955/full/pct:12.5/0/default.jpg\" )  image_map #> class       : SpatRaster  #> dimensions  : 655, 764, 3  (nrow, ncol, nlyr) #> resolution  : 6439.813, 6439.813  (x, y) #> extent      : -12209153, -7289135, 2474851, 6692929  (xmin, xmax, ymin, ymax) #> coord. ref. : WGS 84 / Pseudo-Mercator (EPSG:3857)  #> source      : file7bca6fa8700a.jpg  #> colors RGB  : 1, 2, 3  #> names       : file7bca6fa8700a_1, file7bca6fa8700a_2, file7bca6fa8700a_3"},{"path":"https://elipousson.github.io/feltr/index.html","id":"related-projects","dir":"","previous_headings":"","what":"Related Projects","title":"Read Spatial Data from Felt","text":"{feltr}: R package name provide similar functionality package. felt-upload: Python package upload data Felt. Add Felt QGIS Plugin: QGIS plugin uploading data Felt. feltpy: lightweight Python package interact public API Felt.com.","code":""},{"path":"https://elipousson.github.io/feltr/reference/create_felt_layer.html","id":null,"dir":"Reference","previous_headings":"","what":"Read layers from a Felt map, delete a layer, or create a new layer — create_felt_layer","title":"Read layers from a Felt map, delete a layer, or create a new layer — create_felt_layer","text":"Read layers Felt map read_felt_layers(), delete single layer delete_felt_layer(), update layer update_felt_layer(), create new layer URL, file, sf sfc object create_felt_layer(). Note reading layers return layer data—list layers.","code":""},{"path":"https://elipousson.github.io/feltr/reference/create_felt_layer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read layers from a Felt map, delete a layer, or create a new layer — create_felt_layer","text":"","code":"create_felt_layer(   map_id,   layer,   name = NULL,   fileext = \"gpkg\",   ...,   fill_color = NULL,   stroke_color = NULL,   webhook_url = NULL,   token = NULL )  delete_felt_layer(map_id, layer_id = NULL, safely = TRUE, token = NULL)  read_felt_layers(   map_id,   simplifyVector = TRUE,   token = NULL,   call = caller_env() )  update_felt_layer(   map_id,   layer_id,   name = NULL,   description = NULL,   simplifyVector = TRUE,   token = NULL,   call = caller_env() )"},{"path":"https://elipousson.github.io/feltr/reference/create_felt_layer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read layers from a Felt map, delete a layer, or create a new layer — create_felt_layer","text":"map_id Felt map URL, map ID string, named list id type element. map_id list, must equivalent output get_felt_map() list includes \"id\" string \"type\" string value \"map\". layer Required. object, file path, layer source URL, sf sfc object. layer file path source URL, file type URL type must supported Felt. See https://feltmaps.notion.site/Upload-Anything-b26d739e80184127872faa923b55d232#3e37f06bc38c4971b435fbff2f4da6cb details. layer sf sfc object, object saved temporary file using supplied fileext. name Name new map layer. fileext File extension use temporary file layer sf sfc object. ... Additional parameters passed sf::st_write() layer sf sfc object. fill_color, stroke_color Hex string use layer fill stroke color. Optional. webhook_url layer finishes processing, Felt notify URL. token Felt personal access token layer_id Layer ID. Layer IDs map can listed using read_felt_layers() safely TRUE (default), check user confirmation deleting Felt map. FALSE, delete map without checking. simplifyVector JSON arrays containing primitives (.e. booleans, numbers, strings) caused atomic vectors? call execution environment currently running function, e.g. caller_env(). function mentioned error messages source error. See call argument abort() information. description Map description","code":""},{"path":"https://elipousson.github.io/feltr/reference/emojis_reference.html","id":null,"dir":"Reference","previous_headings":"","what":"Emojis reference data — emojis_reference","title":"Emojis reference data — emojis_reference","text":"simplified data frame list emojis available Felt Emoji Mart picker. information: https://github.com/missive/emoji-mart","code":""},{"path":"https://elipousson.github.io/feltr/reference/emojis_reference.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Emojis reference data — emojis_reference","text":"","code":"emojis_reference"},{"path":"https://elipousson.github.io/feltr/reference/emojis_reference.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Emojis reference data — emojis_reference","text":"data frame 1566 rows 5 variables: id Emoji ID name Name version Version number keywords Keywords alias Alias","code":""},{"path":"https://elipousson.github.io/feltr/reference/emojis_reference.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Emojis reference data — emojis_reference","text":"https://raw.githubusercontent.com/missive/emoji-mart/main/packages/emoji-mart-data/sets/5/native.json","code":""},{"path":"https://elipousson.github.io/feltr/reference/felt_user.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the user information associated with the default (or supplied) token — felt_user","title":"Get the user information associated with the default (or supplied) token — felt_user","text":"List name, email address, user ID Felt user associated default (supplied) token.","code":""},{"path":"https://elipousson.github.io/feltr/reference/felt_user.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the user information associated with the default (or supplied) token — felt_user","text":"","code":"felt_user(token = NULL)"},{"path":"https://elipousson.github.io/feltr/reference/felt_user.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the user information associated with the default (or supplied) token — felt_user","text":"token Felt personal access token","code":""},{"path":"https://elipousson.github.io/feltr/reference/feltr-package.html","id":null,"dir":"Reference","previous_headings":"","what":"feltr: Read Spatial Data from Felt — feltr-package","title":"feltr: Read Spatial Data from Felt — feltr-package","text":"Read Felt maps simple feature objects R.","code":""},{"path":[]},{"path":"https://elipousson.github.io/feltr/reference/feltr-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"feltr: Read Spatial Data from Felt — feltr-package","text":"Maintainer: Eli Pousson eli.pousson@gmail.com (ORCID) [copyright holder]","code":""},{"path":"https://elipousson.github.io/feltr/reference/get_felt_comments.html","id":null,"dir":"Reference","previous_headings":"","what":"Get comments from a Felt map — get_felt_comments","title":"Get comments from a Felt map — get_felt_comments","text":"Get comments Felt map data frame simple feature object. results include comment_url column based comment ID value.","code":""},{"path":"https://elipousson.github.io/feltr/reference/get_felt_comments.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get comments from a Felt map — get_felt_comments","text":"","code":"get_felt_comments(   map_id,   flatten = TRUE,   geometry = TRUE,   crs = NULL,   simplifyVector = TRUE,   token = NULL )"},{"path":"https://elipousson.github.io/feltr/reference/get_felt_comments.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get comments from a Felt map — get_felt_comments","text":"map_id Felt map URL, map ID string, named list id type element. map_id list, must equivalent output get_felt_map() list includes \"id\" string \"type\" string value \"map\". flatten TRUE (default) comments include replies, flatten structure results row contains comment location. FALSE, comments included list column data frames. geometry TRUE (default), return sf object. FALSE, return data frame. crs Coordinate reference system return (geometry TRUE), Default: NULL simplifyVector Passed httr2::resp_body_json(), Default: TRUE token Felt personal access token","code":""},{"path":"https://elipousson.github.io/feltr/reference/get_felt_comments.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get comments from a Felt map — get_felt_comments","text":"data frame simple feature object (list column comments flatten FALSE).","code":""},{"path":"https://elipousson.github.io/feltr/reference/get_felt_comments.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get comments from a Felt map — get_felt_comments","text":"See Felt API documentation endpoint exporting comments.","code":""},{"path":"https://elipousson.github.io/feltr/reference/get_felt_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Felt map data from the body of a map website — get_felt_data","title":"Get Felt map data from the body of a map website — get_felt_data","text":"get_felt_data() returns parsed JSON included body HTML Felt map website (includes features user layer metadata). data can used supplement Public API may deprecated API develops.","code":""},{"path":"https://elipousson.github.io/feltr/reference/get_felt_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Felt map data from the body of a map website — get_felt_data","text":"","code":"get_felt_data(map_id, token = NULL, call = caller_env())"},{"path":"https://elipousson.github.io/feltr/reference/get_felt_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Felt map data from the body of a map website — get_felt_data","text":"map_id Felt map URL, map ID string, named list id type element. map_id list, must equivalent output get_felt_map() list includes \"id\" string \"type\" string value \"map\". token Felt personal access token call execution environment currently running function, e.g. caller_env(). function mentioned error messages source error. See call argument abort() information.","code":""},{"path":"https://elipousson.github.io/feltr/reference/get_felt_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Felt map data from the body of a map website — get_felt_data","text":"list parsed JSON found \"felt-data\" div Felt map webpage.","code":""},{"path":"https://elipousson.github.io/feltr/reference/get_felt_style.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Felt layer styles or update a layer style — get_felt_style","title":"Get Felt layer styles or update a layer style — get_felt_style","text":"Get one Felt layer styles update specified layer style. Warning, updating layer style without list can converted valid Felt Style Language (FSL) may get layer irreversible broken state.","code":""},{"path":"https://elipousson.github.io/feltr/reference/get_felt_style.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Felt layer styles or update a layer style — get_felt_style","text":"","code":"get_felt_style(map_id, layer_id = NULL, call = caller_env())  update_felt_style(map_id, style, layer_id = NULL, call = caller_env())"},{"path":"https://elipousson.github.io/feltr/reference/get_felt_style.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Felt layer styles or update a layer style — get_felt_style","text":"map_id Felt map URL, map ID string, named list id type element. map_id list, must equivalent output get_felt_map() list includes \"id\" string \"type\" string value \"map\". layer_id NULL (default), layers map used. Multi-layer maps currently supported. Otherwise use layer ID string. Use read_felt_layers() list layers existing map. call execution environment currently running function, e.g. caller_env(). function mentioned error messages source error. See call argument abort() information. style named list can converted valid Felt Style Language string. style supplied datasets id value matching layer datasets ids, function updates existing layer style. style NULL (default), read styles supplied map layer. See documentation Felt Style Language API endpoint updating layer styles information.","code":""},{"path":"https://elipousson.github.io/feltr/reference/get_felt_style.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Felt layer styles or update a layer style — get_felt_style","text":"layer_id NULL map contains multiple styles layer_id character vector, function returns list style elements named layer ID values. layer_id string, function returns named list single Felt Style Language specification.","code":""},{"path":"https://elipousson.github.io/feltr/reference/is_felt_url.html","id":null,"dir":"Reference","previous_headings":"","what":"Is a object a Felt URL? — is_felt_url","title":"Is a object a Felt URL? — is_felt_url","text":"object Felt URL?","code":""},{"path":"https://elipousson.github.io/feltr/reference/is_felt_url.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Is a object a Felt URL? — is_felt_url","text":"","code":"is_felt_url(x)  check_felt_url(x, allow_null = FALSE, arg = caller_arg(x), call = caller_env())"},{"path":"https://elipousson.github.io/feltr/reference/is_felt_url.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Is a object a Felt URL? — is_felt_url","text":"x Object check. allow_null TRUE, check_felt_url() allows NULL input without error. Defaults FALSE. arg argument name string. argument mentioned error messages input origin problem. call execution environment currently running function, e.g. caller_env(). function mentioned error messages source error. See call argument abort() information.","code":""},{"path":"https://elipousson.github.io/feltr/reference/read_felt.html","id":null,"dir":"Reference","previous_headings":"","what":"Read data from a Felt map — read_felt","title":"Read data from a Felt map — read_felt","text":"Read simple features Felt map get data embedded website Felt map. Superseded read_felt_map().","code":""},{"path":"https://elipousson.github.io/feltr/reference/read_felt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read data from a Felt map — read_felt","text":"","code":"read_felt(   url,   map_id = NULL,   ...,   crs = 3857,   token = NULL,   rename = TRUE,   name_repair = \"check_unique\" )"},{"path":"https://elipousson.github.io/feltr/reference/read_felt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read data from a Felt map — read_felt","text":"map_id Felt map URL, map ID string, named list id type element. map_id list, must equivalent output get_felt_map() list includes \"id\" string \"type\" string value \"map\". ... Additional parameters passed sf::read_sf(). crs Coordinate reference system return. Defaults 3857. token Felt personal access token rename TRUE (default), strip prefix text \"felt-\" column names. name_repair Passed repair parameter vctrs::vec_as_names(). Defaults \"check_unique\".","code":""},{"path":"https://elipousson.github.io/feltr/reference/read_felt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read data from a Felt map — read_felt","text":"simple feature data frame.","code":""},{"path":[]},{"path":"https://elipousson.github.io/feltr/reference/read_felt_map.html","id":null,"dir":"Reference","previous_headings":"","what":"Read Felt map elements, create a Felt map from a URL, or delete a Felt map — read_felt_map","title":"Read Felt map elements, create a Felt map from a URL, or delete a Felt map — read_felt_map","text":"Read elements, create, delete Felt map URL map ID. get_felt_map() returns list map details optionally (read = TRUE) adds map elements layer list elements list.","code":""},{"path":"https://elipousson.github.io/feltr/reference/read_felt_map.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read Felt map elements, create a Felt map from a URL, or delete a Felt map — read_felt_map","text":"","code":"read_felt_map(map_id, ..., crs = NULL, token = NULL)  get_felt_map(   map_id,   ...,   read = FALSE,   simplifyVector = TRUE,   token = NULL,   call = caller_env() )  create_felt_map(   title = NULL,   description = NULL,   location = NULL,   zoom = NULL,   layer_urls = NULL,   basemap = c(\"default\", \"satellite\"),   token = NULL )  delete_felt_map(map_id, safely = TRUE, token = NULL)"},{"path":"https://elipousson.github.io/feltr/reference/read_felt_map.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read Felt map elements, create a Felt map from a URL, or delete a Felt map — read_felt_map","text":"map_id Felt map URL, map ID string, named list id type element. map_id list, must equivalent output get_felt_map() list includes \"id\" string \"type\" string value \"map\". ... Additional parameters passed sf::read_sf(). crs Coordinate reference system. Passed sf::st_transform() supplied. token Felt personal access token read TRUE, add sf object map data element list Felt layers returned list map attributes. Defaults FALSE. simplifyVector JSON arrays containing primitives (.e. booleans, numbers, strings) caused atomic vectors? call execution environment currently running function, e.g. caller_env(). function mentioned error messages source error. See call argument abort() information. title Map title description Map description location Location center map, either sf, sfc, bbox object length 2 numeric vector form c(\"lon\", \"lat\"). pass coordinates lat/lon order, set feltr.latlon option TRUE (option defaults FALSE). location NULL (default), map centered Oakland, California. zoom Zoom level number layer_urls character vector list raster layer URLs. basemap Basemap, string (\"default\" \"satellite\"), valid layer URL, color name, color hex code. safely TRUE (default), check user confirmation deleting Felt map. FALSE, delete map without checking.","code":""},{"path":"https://elipousson.github.io/feltr/reference/read_felt_map.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read Felt map elements, create a Felt map from a URL, or delete a Felt map — read_felt_map","text":"read_felt_map() returns sf object, create_felt_map() invisibly returns list attributes created map, delete_felt_map() return anything.","code":""},{"path":"https://elipousson.github.io/feltr/reference/read_felt_map.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read Felt map elements, create a Felt map from a URL, or delete a Felt map — read_felt_map","text":"","code":"if (FALSE) { if (interactive()) {   map_data <- create_felt_map(title = \"Example map\")    url <- map_data$attributes$url    get_felt_map(url = url)    delete_felt_map(url = url)    read_felt_map(\"https://felt.com/map/Site-Plan-Example-PGTipS2mT8CYBIVlyAm9BkD\") } }"},{"path":"https://elipousson.github.io/feltr/reference/read_felt_raster.html","id":null,"dir":"Reference","previous_headings":"","what":"Use rasterpic to create a SpatRaster object from a Felt map — read_felt_raster","title":"Use rasterpic to create a SpatRaster object from a Felt map — read_felt_raster","text":"Read image feature Felt use rasterpic::rasterpic_img() function corresponding image URL file path create SpatRaster object based feature geometry.","code":""},{"path":"https://elipousson.github.io/feltr/reference/read_felt_raster.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use rasterpic to create a SpatRaster object from a Felt map — read_felt_raster","text":"","code":"read_felt_raster(x, images = NULL, ..., col = NULL, crs = 3857)"},{"path":"https://elipousson.github.io/feltr/reference/read_felt_raster.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use rasterpic to create a SpatRaster object from a Felt map — read_felt_raster","text":"x x Felt map URL, passed read_felt() create data.frame features \"type\" \"text\" columns. x data.frame, expected data.frame created reading Felt map read_felt() sf object type column includes value \"Image\" (images named) text column matching text. Required. images vector image file paths URLs \"png\", \"jpeg/jpg\", \"tiff/tif\" file extension. images must ordered match order \"Image\" type features input data.frame x names match text column x. images named, \"Image\" features x text match names images excluded returned list. Defaults NULL. Optional col provided. ... Additional parameters passed sf::read_sf(). col features x contain attribute file path URL, set col name attribute column. col ignored images provided. Defaults NULL. crs Coordinate reference system return. Defaults 3857.","code":""},{"path":"https://elipousson.github.io/feltr/reference/read_felt_raster.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Use rasterpic to create a SpatRaster object from a Felt map — read_felt_raster","text":"images length 1, SpatRaster object returned. Otherwise, function returns list SpatRaster objects length images.","code":""},{"path":"https://elipousson.github.io/feltr/reference/request_felt.html","id":null,"dir":"Reference","previous_headings":"","what":"Build and perform a request for the Felt API — request_felt","title":"Build and perform a request for the Felt API — request_felt","text":"internal function help build perform request Felt API.","code":""},{"path":"https://elipousson.github.io/feltr/reference/request_felt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build and perform a request for the Felt API — request_felt","text":"","code":"request_felt(   base_url = \"https://felt.com/api/v1\",   endpoint = NULL,   template = NULL,   ...,   data = NULL,   token = NULL,   perform = TRUE,   call = caller_env() )  req_felt_template(   req,   endpoint = c(\"read profile\", \"create map\", \"get map\", \"read map\", \"delete map\",     \"get comments\", \"read layers\", \"create layer\", \"update layer\", \"finish layer\",     \"import url\", \"delete layer\", \"get layer style\", \"update layer style\"),   template = NULL,   map_id = NULL,   ...,   call = rlang::caller_env() )"},{"path":"https://elipousson.github.io/feltr/reference/request_felt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build and perform a request for the Felt API — request_felt","text":"base_url Base URL request. token Felt personal access token perform TRUE (default), perform request httr2::req_perform(). FALSE, return request object. call execution environment currently running function, e.g. caller_env(). function mentioned error messages source error. See call argument abort() information. req request. map_id Felt map URL, map ID string, named list id type element. map_id list, must equivalent output get_felt_map() list includes \"id\" string \"type\" string value \"map\".","code":""},{"path":"https://elipousson.github.io/feltr/reference/set_felt_map_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Set up Felt map data — set_felt_map_data","title":"Set up Felt map data — set_felt_map_data","text":"Internal function prepare input parameters create_felt_map()","code":""},{"path":"https://elipousson.github.io/feltr/reference/set_felt_map_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set up Felt map data — set_felt_map_data","text":"","code":"set_felt_map_data(   title = NULL,   description = NULL,   location = NULL,   zoom = NULL,   layer_urls = NULL,   basemap = c(\"default\", \"satellite\"),   allow_null = TRUE,   call = caller_env() )"},{"path":"https://elipousson.github.io/feltr/reference/set_felt_map_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set up Felt map data — set_felt_map_data","text":"title Map title description Map description location Location center map, either sf, sfc, bbox object length 2 numeric vector form c(\"lon\", \"lat\"). pass coordinates lat/lon order, set feltr.latlon option TRUE (option defaults FALSE). location NULL (default), map centered Oakland, California. zoom Zoom level number layer_urls character vector list raster layer URLs. basemap Basemap, string (\"default\" \"satellite\"), valid layer URL, color name, color hex code.","code":""},{"path":"https://elipousson.github.io/feltr/reference/set_felt_token.html","id":null,"dir":"Reference","previous_headings":"","what":"Set or get a Felt API personal access token — set_felt_token","title":"Set or get a Felt API personal access token — set_felt_token","text":"API personal access token required use read_felt(). See https://feltmaps.notion.site/Felt-Public-API-reference-PUBLIC-c01e0e6b0d954a678c608131b894e8e1 instructions get token.","code":""},{"path":"https://elipousson.github.io/feltr/reference/set_felt_token.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set or get a Felt API personal access token — set_felt_token","text":"","code":"set_felt_token(   token = NULL,   install = FALSE,   overwrite = FALSE,   default = \"FELT_ACCESS_TOKEN\" )  get_felt_token(   token = NULL,   default = \"FELT_ACCESS_TOKEN\",   call = caller_env() )"},{"path":"https://elipousson.github.io/feltr/reference/set_felt_token.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set or get a Felt API personal access token — set_felt_token","text":"token Felt personal access token install TRUE, function adds token .Renviron use future sessions. Defaults FALSE. overwrite TRUE, overwrite existing token .Renviron using environment variable name. Defaults FALSE. default Default name used environment variable token saved. call execution environment currently running function, e.g. caller_env(). function mentioned error messages source error. See call argument abort() information.","code":""},{"path":"https://elipousson.github.io/feltr/reference/set_r_environ_token.html","id":null,"dir":"Reference","previous_headings":"","what":"Set or get a token from your  .Renviron file — set_r_environ_token","title":"Set or get a token from your  .Renviron file — set_r_environ_token","text":"Set get token  .Renviron file","code":""},{"path":"https://elipousson.github.io/feltr/reference/set_r_environ_token.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set or get a token from your  .Renviron file — set_r_environ_token","text":"","code":"set_r_environ_token(   token,   install = FALSE,   overwrite = FALSE,   default = \"TOKEN\",   quiet = FALSE,   call = caller_env() )  get_r_environ_token(   token = NULL,   default = \"TOKEN\",   message = NULL,   pattern = NULL,   perl = TRUE,   call = caller_env(),   ... )"},{"path":"https://elipousson.github.io/feltr/reference/set_r_environ_token.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Set or get a token from your  .Renviron file — set_r_environ_token","text":"Adapted tidycensus function tidycensus::census_api_key().","code":""},{"path":"https://elipousson.github.io/feltr/reference/set_r_environ_token.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set or get a token from your  .Renviron file — set_r_environ_token","text":"token personal access token, API key, environment variable. Optional get_r_environ_token(). install TRUE, function adds token .Renviron use future sessions. Defaults FALSE. overwrite TRUE, overwrite existing token .Renviron using environment variable name. Defaults FALSE. default Default name used environment variable token saved. quiet TRUE, suppress messages setting token locally setting cli.default_handler option suppressMessages(). Defaults FALSE. call execution environment currently running function, e.g. caller_env(). function mentioned error messages source error. See call argument abort() information. message Optional error message use token found. pattern Optional pattern passed grepl() used validate stored token. pattern supplied, returned token must string. perl Perl-compatible regexps used checking pattern? Defaults TRUE.","code":""},{"path":"https://elipousson.github.io/feltr/reference/set_r_environ_token.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set or get a token from your  .Renviron file — set_r_environ_token","text":"set_r_environ_token() invisibly returns string supplied token. get_r_environ_token() returns string supplied token obtained environment variable named default.","code":""},{"path":"https://elipousson.github.io/feltr/reference/set_r_environ_token.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Set or get a token from your  .Renviron file — set_r_environ_token","text":"Kyle Walker kyle@walker-data.com Eli Pousson eli.pousson@gmail.com (ORCID) set_r_environ_token() can set API key personal access token (PAT) local environment variable temporarily current session saved future sessions. get_r_environ_token() can return environment variable error token missing token match supplied pattern.","code":""},{"path":"https://elipousson.github.io/feltr/news/index.html","id":"feltr-development-version","dir":"Changelog","previous_headings":"","what":"feltr (development version)","title":"feltr (development version)","text":"Add support fill_color, stroke_color, webhook_url parameters (2023-11-09) create_felt_layer(). Add update_felt_layer() function (2023-11-09).","code":""},{"path":"https://elipousson.github.io/feltr/news/index.html","id":"feltr-012","dir":"Changelog","previous_headings":"","what":"feltr 0.1.2","title":"feltr 0.1.2","text":"Add read_felt_layers(), create_felt_map(), delete_felt_map() functions get_felt_map() function. Add support basemap layer_urls parameter create_felt_map() function. Remove url parameter add support passing URLs (2023-07-13) named lists (2023-07-19) map_id parameter. Add get_felt_comments() function (2023-07-13). Add get_felt_style() update_felt_style() functions (2023-07-13). Add support file uploads (2023-07-14) sf sfc object inputs (2023-07-19) create_felt_layer(). Drop {settoken} Imports (2023-09-26) favor standalone imports similar functions.","code":""},{"path":"https://elipousson.github.io/feltr/news/index.html","id":"feltr-011-2023-06-30","dir":"Changelog","previous_headings":"","what":"feltr 0.1.1 (2023-06-30)","title":"feltr 0.1.1 (2023-06-30)","text":"Add read_felt_map(), create_felt_map(), delete_felt_map() functions.","code":""},{"path":"https://elipousson.github.io/feltr/news/index.html","id":"feltr-010-2023-04-24","dir":"Changelog","previous_headings":"","what":"feltr 0.1.0 (2023-04-24)","title":"feltr 0.1.0 (2023-04-24)","text":"Initial release read_felt(), get_felt_data(), read_felt_raster().","code":""}]
