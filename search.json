[{"path":"https://elipousson.github.io/feltr/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 Eli Pousson Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://elipousson.github.io/feltr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Eli Pousson. Author, maintainer, copyright holder.","code":""},{"path":"https://elipousson.github.io/feltr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Pousson E (2023). feltr: Read Spatial Data Felt. https://github.com/elipousson/feltr/, https://elipousson.github.io/feltr/.","code":"@Manual{,   title = {feltr: Read Spatial Data from Felt},   author = {Eli Pousson},   year = {2023},   note = {https://github.com/elipousson/feltr/, https://elipousson.github.io/feltr/}, }"},{"path":"https://elipousson.github.io/feltr/index.html","id":"feltr-","dir":"","previous_headings":"","what":"Read Spatial Data from Felt","title":"Read Spatial Data from Felt","text":"goal feltr read maps Felt simple feature SpatRaster objects.","code":""},{"path":"https://elipousson.github.io/feltr/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Read Spatial Data from Felt","text":"can install development version feltr like :","code":"pak::pkg_install(\"elipousson/feltr\")"},{"path":"https://elipousson.github.io/feltr/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Read Spatial Data from Felt","text":"can use read_felt() create sf object features map URL.  can also use read_felt_raster() (wrapper rasterpic::rasterpic_img()) create SpatRaster object “Image” type feature Felt.","code":"library(feltr) ## basic example code site_plan <- read_felt(\"https://felt.com/map/Site-Plan-Example-PGTipS2mT8CYBIVlyAm9BkD\")  plot(site_plan) #> Warning: plotting the first 9 out of 22 attributes; use max.plot = 22 to plot #> all image_map <- read_felt_raster(   \"https://felt.com/map/feltr-sample-map-read-felt-raster-oiinodTbT79BEueYdGp1aND\",   \"https://tile.loc.gov/image-services/iiif/service:gmd:gmd370:g3700:g3700:ct003955/full/pct:12.5/0/default.jpg\" )  image_map #> class       : SpatRaster  #> dimensions  : 655, 764, 3  (nrow, ncol, nlyr) #> resolution  : 6439.813, 6439.813  (x, y) #> extent      : -12209153, -7289135, 2474851, 6692929  (xmin, xmax, ymin, ymax) #> coord. ref. : WGS 84 / Pseudo-Mercator (EPSG:3857)  #> source      : filebe827f397dd1.jpg  #> colors RGB  : 1, 2, 3  #> names       : filebe827f397dd1_1, filebe827f397dd1_2, filebe827f397dd1_3"},{"path":"https://elipousson.github.io/feltr/reference/emojis_reference.html","id":null,"dir":"Reference","previous_headings":"","what":"Emojis reference data — emojis_reference","title":"Emojis reference data — emojis_reference","text":"simplified data frame list emojis available Felt Emoji Mart picker. information: https://github.com/missive/emoji-mart","code":""},{"path":"https://elipousson.github.io/feltr/reference/emojis_reference.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Emojis reference data — emojis_reference","text":"","code":"emojis_reference"},{"path":"https://elipousson.github.io/feltr/reference/emojis_reference.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Emojis reference data — emojis_reference","text":"data frame 1566 rows 5 variables: id Emoji ID name Name version Version number keywords Keywords alias Alias","code":""},{"path":"https://elipousson.github.io/feltr/reference/emojis_reference.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Emojis reference data — emojis_reference","text":"https://raw.githubusercontent.com/missive/emoji-mart/main/packages/emoji-mart-data/sets/5/native.json","code":""},{"path":"https://elipousson.github.io/feltr/reference/felt_user.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the user information associated with the default (or supplied) token — felt_user","title":"Get the user information associated with the default (or supplied) token — felt_user","text":"List name, email address, user ID Felt user associated default (supplied) token.","code":""},{"path":"https://elipousson.github.io/feltr/reference/felt_user.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the user information associated with the default (or supplied) token — felt_user","text":"","code":"felt_user(token = NULL)"},{"path":"https://elipousson.github.io/feltr/reference/felt_user.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the user information associated with the default (or supplied) token — felt_user","text":"token Felt personal access token","code":""},{"path":"https://elipousson.github.io/feltr/reference/feltr-package.html","id":null,"dir":"Reference","previous_headings":"","what":"feltr: Read Spatial Data from Felt — feltr-package","title":"feltr: Read Spatial Data from Felt — feltr-package","text":"Read Felt maps simple feature objects R.","code":""},{"path":[]},{"path":"https://elipousson.github.io/feltr/reference/feltr-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"feltr: Read Spatial Data from Felt — feltr-package","text":"Maintainer: Eli Pousson eli.pousson@gmail.com (ORCID) [copyright holder]","code":""},{"path":"https://elipousson.github.io/feltr/reference/is_felt_url.html","id":null,"dir":"Reference","previous_headings":"","what":"Check Felt URLs — is_felt_url","title":"Check Felt URLs — is_felt_url","text":"Check Felt URLs","code":""},{"path":"https://elipousson.github.io/feltr/reference/is_felt_url.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check Felt URLs — is_felt_url","text":"","code":"is_felt_url(x)  check_felt_url(   url,   message = \"{.arg url} must be a Felt URL.\",   ...,   call = caller_env() )"},{"path":"https://elipousson.github.io/feltr/reference/is_felt_url.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check Felt URLs — is_felt_url","text":"x, url Object check. message Message passed cli::cli_abort() url Felt url. ... Additional parameters passed cli::cli_abort() url Felt url. call execution environment currently running function, e.g. caller_env(). function mentioned error messages source error. See call argument abort() information.","code":""},{"path":"https://elipousson.github.io/feltr/reference/read_felt.html","id":null,"dir":"Reference","previous_headings":"","what":"Read data from a Felt map — read_felt","title":"Read data from a Felt map — read_felt","text":"Read simple features Felt map get data embedded website Felt map. read_felt() wrapper read_felt_map() extra features. get_felt_data() returns parsed JSON included body Felt map website (includes features user layer metadata).","code":""},{"path":"https://elipousson.github.io/feltr/reference/read_felt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read data from a Felt map — read_felt","text":"","code":"read_felt(   url,   map_id = NULL,   ...,   crs = 3857,   token = NULL,   rename = TRUE,   name_repair = \"check_unique\" )  get_felt_data(url, call = caller_env())"},{"path":"https://elipousson.github.io/feltr/reference/read_felt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read data from a Felt map — read_felt","text":"url Felt map URL. map_id Felt map ID, optional url supplied. ... Additional parameters passed sf::read_sf(). crs Coordinate reference system return. Defaults 3857. token Felt personal access token rename TRUE (default), strip prefix text \"felt-\" column names. name_repair Passed repair parameter vctrs::vec_as_names(). Defaults \"check_unique\". call execution environment currently running function, e.g. caller_env(). function mentioned error messages source error. See call argument abort() information.","code":""},{"path":"https://elipousson.github.io/feltr/reference/read_felt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read data from a Felt map — read_felt","text":"simple feature data frame list parsed JSON found \"felt-data\" div Felt map webpage.","code":""},{"path":[]},{"path":"https://elipousson.github.io/feltr/reference/read_felt_map.html","id":null,"dir":"Reference","previous_headings":"","what":"Read, create, or delete a Felt map — read_felt_map","title":"Read, create, or delete a Felt map — read_felt_map","text":"Read, create, delete Felt map URL map ID.","code":""},{"path":"https://elipousson.github.io/feltr/reference/read_felt_map.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read, create, or delete a Felt map — read_felt_map","text":"","code":"read_felt_map(url, map_id = NULL, ..., token = NULL)  create_felt_map(   title = NULL,   description = NULL,   location = NULL,   zoom = NULL,   layer_urls = NULL,   basemap = c(\"default\", \"satellite\"),   token = NULL )  delete_felt_map(url, map_id = NULL, safely = TRUE, token = NULL)"},{"path":"https://elipousson.github.io/feltr/reference/read_felt_map.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read, create, or delete a Felt map — read_felt_map","text":"url Felt map URL. map_id Felt map ID, optional url supplied. ... Additional parameters passed sf::read_sf(). token Felt personal access token title Map title description Map description location Location center map, either sf sfc object length 2 numeric vector form c(\"lon\", \"lat\") zoom Zoom level number layer_urls Raster layer URLs basemap Basemap, string (\"default\" \"satellite\") valid layer URL color hex code. safely TRUE (default), check user confirmation deleting Felt map. FALSE, delete map without checking confirmation.","code":""},{"path":"https://elipousson.github.io/feltr/reference/read_felt_map.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read, create, or delete a Felt map — read_felt_map","text":"read_felt_map() returns sf object, create_felt_map() invisibly returns list attributes created map, delete_felt_map() return anything.","code":""},{"path":"https://elipousson.github.io/feltr/reference/read_felt_raster.html","id":null,"dir":"Reference","previous_headings":"","what":"Use rasterpic to create a SpatRaster object from a Felt map — read_felt_raster","title":"Use rasterpic to create a SpatRaster object from a Felt map — read_felt_raster","text":"Read image feature Felt use rasterpic::rasterpic_img() function corresponding image URL file path create SpatRaster object based feature geometry.","code":""},{"path":"https://elipousson.github.io/feltr/reference/read_felt_raster.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use rasterpic to create a SpatRaster object from a Felt map — read_felt_raster","text":"","code":"read_felt_raster(x, images = NULL, ..., col = NULL, crs = 3857)"},{"path":"https://elipousson.github.io/feltr/reference/read_felt_raster.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use rasterpic to create a SpatRaster object from a Felt map — read_felt_raster","text":"x x Felt map URL, passed read_felt() create data.frame features \"type\" \"text\" columns. x data.frame, expected data.frame created reading Felt map read_felt() sf object type column includes value \"Image\" (images named) text column matching text. Required. images vector image file paths URLs \"png\", \"jpeg/jpg\", \"tiff/tif\" file extension. images must ordered match order \"Image\" type features input data.frame x names match text column x. images named, \"Image\" features x text match names images excluded returned list. Defaults NULL. Optional col provided. ... Additional parameters passed sf::read_sf(). col features x contain attribute file path URL, set col name attribute column. col ignored images provided. Defaults NULL. crs Coordinate reference system return. Defaults 3857.","code":""},{"path":"https://elipousson.github.io/feltr/reference/read_felt_raster.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Use rasterpic to create a SpatRaster object from a Felt map — read_felt_raster","text":"images length 1, SpatRaster object returned. Otherwise, function returns list SpatRaster objects length images.","code":""},{"path":"https://elipousson.github.io/feltr/reference/request_felt.html","id":null,"dir":"Reference","previous_headings":"","what":"Build and perform a request for the Felt API — request_felt","title":"Build and perform a request for the Felt API — request_felt","text":"internal function help build perform request Felt API.","code":""},{"path":"https://elipousson.github.io/feltr/reference/request_felt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build and perform a request for the Felt API — request_felt","text":"","code":"request_felt(   base_url = \"https://felt.com/api/v1\",   endpoint = NULL,   template = NULL,   data = NULL,   token = NULL,   ...,   perform = TRUE,   call = caller_env() )"},{"path":"https://elipousson.github.io/feltr/reference/request_felt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build and perform a request for the Felt API — request_felt","text":"base_url Base URL request. token Felt personal access token perform TRUE (default), perform request httr2::req_perform(). FALSE, return request object. call execution environment currently running function, e.g. caller_env(). function mentioned error messages source error. See call argument abort() information.","code":""},{"path":"https://elipousson.github.io/feltr/reference/set_felt_map_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Set up Felt map data — set_felt_map_data","title":"Set up Felt map data — set_felt_map_data","text":"Internal function setting map data create_felt_map()","code":""},{"path":"https://elipousson.github.io/feltr/reference/set_felt_map_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set up Felt map data — set_felt_map_data","text":"","code":"set_felt_map_data(   title = NULL,   description = NULL,   location = NULL,   zoom = NULL,   layer_urls = NULL,   basemap = c(\"default\", \"satellite\"),   call = caller_env() )"},{"path":"https://elipousson.github.io/feltr/reference/set_felt_map_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set up Felt map data — set_felt_map_data","text":"title Map title description Map description location Location center map, either sf sfc object length 2 numeric vector form c(\"lon\", \"lat\") zoom Zoom level number layer_urls Raster layer URLs basemap Basemap, string (\"default\" \"satellite\") valid layer URL color hex code.","code":""},{"path":"https://elipousson.github.io/feltr/reference/set_felt_token.html","id":null,"dir":"Reference","previous_headings":"","what":"Set or get a Felt API personal access token — set_felt_token","title":"Set or get a Felt API personal access token — set_felt_token","text":"API personal access token required use read_felt(). See https://feltmaps.notion.site/Felt-Public-API-reference-PUBLIC-c01e0e6b0d954a678c608131b894e8e1 instructions get token.","code":""},{"path":"https://elipousson.github.io/feltr/reference/set_felt_token.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set or get a Felt API personal access token — set_felt_token","text":"","code":"set_felt_token(   token = NULL,   install = FALSE,   overwrite = FALSE,   default = \"FELT_ACCESS_TOKEN\" )  get_felt_token(   token = NULL,   default = \"FELT_ACCESS_TOKEN\",   call = caller_env() )"},{"path":"https://elipousson.github.io/feltr/reference/set_felt_token.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set or get a Felt API personal access token — set_felt_token","text":"token Felt personal access token install Add token .Renviron use future sessions. overwrite TRUE, overwrite existing token .Renviron, default Default name used environmental variable token stored. call execution environment currently running function, e.g. caller_env(). function mentioned error messages source error. See call argument abort() information.","code":""},{"path":"https://elipousson.github.io/feltr/news/index.html","id":"feltr-011","dir":"Changelog","previous_headings":"","what":"feltr 0.1.1","title":"feltr 0.1.1","text":"Add read_felt_map(), create_felt_map(), delete_felt_map() functions.","code":""},{"path":"https://elipousson.github.io/feltr/news/index.html","id":"feltr-010","dir":"Changelog","previous_headings":"","what":"feltr 0.1.0","title":"feltr 0.1.0","text":"Initial release.","code":""}]
